
---

Magnets:

  price_per: 1 # total cost of raw materials for magnets from Cost_Total from Magnets_2262_Final.m
  fab_factor: 2 # arbitrary default FF

Blanket:

  # multiply volume of flibe needed for tank by two to account for HX etc
  price_per: 154 * 1940 # cost/kg * kg/m^3 of Flibe
  quantity: 2* 2*pi^2* ( R_0 / 1u"m" ) * ( ( ( a() / 1u"m" )+0.7004)*(( a_kappa() / 1u"m" )+0.7004) - ( ( a() / 1u"m" )+0.0804)*(( a_kappa() / 1u"m" )+0.0804) ) # volume
  fab_factor: 1.8 # min set by arc for tank etc

First_Wall:

  price_per: 29 * 19250 # cost/kg * kg/m^3 of tungsten
  quantity: 2*pi^2* ( R_0 / 1u"m" ) * ( ( ( a() / 1u"m" )+.005)*(( a_kappa() / 1u"m" )+.005) -  ( a() / 1u"m" )*( a_kappa() / 1u"m" ) ) # volume
  fab_factor: 10 # arbitrary default FF

Be_multiplier:

  price_per: 257 * 1850  # cost/kg * kg/m^3 of beryllium
  quantity: 2*pi^2* ( R_0 / 1u"m" ) * ( ( ( a() / 1u"m" )+.0804)*(( a_kappa() / 1u"m" )+0.0804) - ( ( a() / 1u"m" )+0.0304)*(( a_kappa() / 1u"m" )+0.0304) ) # volume
  fab_factor: 10 # arbitrary default FF

RF:

  price_per: 1 # cost per kW given from RF team, don't have their code yet
  quantity: 1 # number of kW given from RF team, don't have their code yet

BOP_turbine:

  price_per: 360e6*(thermal_power()/2000)^0.8*(eta_BOP/.6)

BOP_heatRej:

  price_per:  87e6 * (1- eta_BOP) * thermal_power() / 2300

BOP_ElecGen:

  price_per: 183e6*(econ_MW_e()/1200)^0.5

BOP_other:

  price_per:  197e6*(econ_MW_e()/1000)^0.8

MagnetPower:

  price_per: 1 # Magnet code?
  quantity: 1 # TO BE FILLED IN

Divertor:

  price_per: divertor_material_cost()
  # want this to be the output from the
  # function divertor_material_cost which is in the divertor folder of the Final Code Blocks folder
  # the above function replaces cost.m that Will sent
  fab_factor: 5 # arbitrary default FF

DivertorCool:

  price_per: 50e6 # cst for any divertor

VacuumVessel:

  price_per: 56 * 8192  # cost/kg * kg/m^3 of inconel 718
  quantity: 2*pi^2* ( R_0 / 1u"m" ) * ( ( ( a() / 1u"m" )+.0304)*(( a_kappa() / 1u"m" )+.0304) - ( ( a() / 1u"m" )+.005)*(( a_kappa() / 1u"m" )+.005) + ( ( a() / 1u"m" )+0.7258)*(( a_kappa() / 1u"m" )+0.7258) - ( ( a() / 1u"m" )+0.7004)*(( a_kappa() / 1u"m" )+0.7004) ) # volume
  fab_factor: 20 # arbitrary default FF

MachineAssem:

  price_per: 82.6e3 * 1.34 * 1552 * ( R_0 / 1u"m" )  / 6.2 * 1.10 # 1.10 is the inflation conversion

Cryostat:

  price_per: Cryostat_Cost() # from magnet code
  fab_factor: 1.2 # arbitrary default FF

ThermalShields:

  price_per: 26.4 * 3760 # cost/kg * kg/m^3 of TiH2
  quantity: 2*pi^2* ( R_0 / 1u"m" ) * ( ( ( a() / 1u"m" )+0.7258 + ( shield_thickness() / 1u"m" ))*(( a_kappa() / 1u"m" )+0.7258 + ( shield_thickness() / 1u"m" )) - ( ( a() / 1u"m" )+0.7258)*(( a_kappa() / 1u"m" )+0.7258) ) # volume
  fab_factor: 5 # arbitrary default FF

VacuumPumpingandFueling:

  price_per: 78e6*( calc_possible_values( P_F() / 1u"MW" ) /1758)^0.8+78e6 # from aries

CoolingWater:

TritiumPlant:

  price_per: 1 # TO BE FILLED IN
  quantity: 1 # TO BE FILLED IN

Cryoplant:

  price_per: Cryoplant_Cost() # from magnet code
  fab_factor: 1.2 # arbitrary default FF

PowerSupplies:

  # price_per: 4200e3
  # quantity: econ_MW_e()
  # fab_factor: 1

Buildings:

  price_per: 1.292e6
  quantity: econ_MW_e()

WasteTreatment:

RadiologicalProtection:

  price_per: 1.85e6

Land:

  price_per: 90e3
  quantity: econ_MW_e()
